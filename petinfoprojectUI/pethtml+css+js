<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>PetInfoBlog</title>
  <style>
    /* Global Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: "Times New Roman", Times, serif;
      background-color: #c8c0c0;
      color: #333;
    }
    
    /* Navbar Styles */
    .navbar {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background-color: #0ec14d;
      padding: 10px 20px;
      color: #fff;
    }
    .nav-left {
      display: flex;
      align-items: center;
    }
    .logo {
      font-size: 1.5rem;
      margin-right: 20px;
    }
    .hamburger {
      display: none;
      font-size: 1.5rem;
      cursor: pointer;
    }
    .nav-menu {
      display: flex;
      align-items: center;
    }
    .nav-links {
      list-style: none;
      display: flex;
      gap: 20px;
      margin: 0;
      padding: 0;
    }
    .nav-links li a {
      text-decoration: none;
      color: #fff;
      font-weight: 500;
      transition: color 0.3s;
    }
    .nav-links li a:hover {
      color: #ffce00;
    }
    .search-container {
      margin-left: 20px;
    }
    .search-bar {
      padding: 6px;
      border: none;
      border-radius: 4px;
    }
    
    /* Responsive Navbar */
    @media (max-width: 768px) {
      .hamburger {
        display: block;
      }
      .nav-menu {
        position: absolute;
        top: 60px;
        right: 0;
        background-color: #2c3e50;
        flex-direction: column;
        width: 100%;
        align-items: flex-start;
        padding: 10px 20px;
        display: none;
      }
      .nav-menu.active {
        display: flex;
      }
      .nav-links {
        flex-direction: column;
        gap: 10px;
        width: 100%;
      }
    }
    
    /* Main Content & Cards */
    main {
      width: 90%;
      max-width: 1200px;
      margin: 20px auto;
    }
    .card-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }
    .fact-card {
      background-color: #fff;
      border-radius: 8px;
      padding: 15px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      text-align: center;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
    .fact-card p {
      font-size: 1.1rem;
      line-height: 1.4;
    }
    .primary-btn {
      display: inline-block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      border: none;
      background-color: #2c3e50;
      color: #fff;
      border-radius: 4px;
    }
    /* Weather Section Styles */
    #weather-info {
      margin-top: 20px;
      font-size: 18px;
      text-align: center;
      background-color: #fff;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    /*mypetapi*/
    .pet-card {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  padding: 15px;
  text-align: center;
  transition: transform 0.2s;
}
.pet-card:hover {
  transform: scale(1.02);
}
.pet-card h3 {
  color: #2c3e50;
  font-size: 1.2rem;
}
.pet-card .date {
  font-size: 0.9rem;
  color: #888;
  margin-bottom: 10px;
}
.pet-card p {
  font-size: 0.95rem;
  line-height: 1.5;
}
.read-more {
  margin-top: 10px;
  background-color: #e74c3c;
  color: white;
  padding: 6px 12px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

  </style>
</head>
<body>

  <!-- Navigation Bar -->
  <header class="navbar">
    <div class="nav-left">
      <h1 class="logo">Pet Information Blog</h1>
      <!-- Hamburger Icon (visible on mobile) -->
      <div class="hamburger" id="hamburger">&#9776;</div>
    </div>
    </nav>
  </header>
  
  <!-- Main Content -->
  <section style="margin-top: 40px;">
    <h2 style="text-align:center;">Pet Info Cards</h2>
    <div style="text-align:center;">
      <button id="loadPetInfoBtn" class="primary-btn">Show Pet Info</button>
    </div>
    <div id="petCardsContainer" class="card-container"></div>
  </section>
  

    <!-- Weather Section BELOW the facts -->
    <section style="margin-top:40px;">
      <h2 style="text-align:center;">Weather</h2>
      <div style="text-align:center;">
        <button id="weather-btn" class="primary-btn">Check Weather</button>
      </div>
      <div id="weather-info"></div>
    </section>
    <section> 

    <!-- Pet Fashion Section -->
<section style="margin-top: 40px;">
  <h2 style="text-align:center;">Pet Fashion</h2>
  <div style="text-align:center;">
    <button id="fetchDataButton" class="primary-btn">Pet Fashion</button>
  </div>
  <div id="products-container" class="fashion-gallery" style="margin-top: 20px;"></div>
</section>
  </main>
  
  <!-- JavaScript -->
  <script>
    // Toggle the mobile navbar
    const hamburger = document.getElementById('hamburger');
    const navMenu = document.getElementById('nav-menu');
    hamburger.addEventListener('click', () => {
      navMenu.classList.toggle('active');
    });

    //myapicards
    let petDataLoaded = false;
let petCardsVisible = false;

document.getElementById('loadPetInfoBtn').addEventListener('click', function () {
  const container = document.getElementById('petCardsContainer');
  const button = document.getElementById('loadPetInfoBtn');

  // If already visible, hide them
  if (petCardsVisible) {
    container.innerHTML = "";
    button.textContent = "Show Pet Info";
    petCardsVisible = false;
    return;
  }

  // If not loaded before, fetch from API
  if (!petDataLoaded) {
    fetch('http://35.173.214.218:8000/api/pets/')
      .then(response => response.json())
      .then(data => {
        if (data.length === 0) {
          container.innerHTML = "<p>No pet data available.</p>";
          return;
        }

        data.forEach(pet => {
          const card = document.createElement('div');
          card.classList.add('pet-card');

          const createdDate = new Date(pet.created_at).toLocaleDateString('en-US', {
            year: 'numeric', month: 'long', day: 'numeric'
          });

          card.innerHTML = `
            <h3>${pet.name} (${pet.pet_type})</h3>
            <div class="date">${createdDate}</div>
            <p><strong>Breed:</strong> ${pet.breed || 'Not specified'}</p>
            <p><strong>Age:</strong> ${pet.age} years</p>
            <p>${pet.description}</p>
            <button class="read-more">Read More</button>
          `;
          container.appendChild(card);
        });

        petDataLoaded = true;
        petCardsVisible = true;
        button.textContent = "Hide Pet Info";
      })
      .catch(error => {
        console.error("Error fetching pets:", error);
        container.innerHTML = "<p>Error loading pet info.</p>";
      });
  } else {
    // If already loaded, just show it again
    fetch('http://35.173.214.218:8000/api/pets/')
      .then(response => response.json())
      .then(data => {
        data.forEach(pet => {
          const card = document.createElement('div');
          card.classList.add('pet-card');

          const createdDate = new Date(pet.created_at).toLocaleDateString('en-US', {
            year: 'numeric', month: 'long', day: 'numeric'
          });

          card.innerHTML = `
            <h3>${pet.name} (${pet.pet_type})</h3>
            <div class="date">${createdDate}</div>
            <p><strong>Breed:</strong> ${pet.breed || 'Not specified'}</p>
            <p><strong>Age:</strong> ${pet.age} years</p>
            <p>${pet.description}</p>
            <button class="read-more">Read More</button>
          `;
          container.appendChild(card);
        });

        petCardsVisible = true;
        button.textContent = "Hide Pet Info";
      });
  }
});


    // Interesting Facts Section
    const petFacts = [
      "Dogs have a sense of time and can miss you when you’re gone.",
      "Cats can jump up to six times their length.",
      "Guinea pigs often 'popcorn' when happy, hopping straight up in the air.",
      "A group of kittens is called a 'kindle'.",
      "Rabbits can see nearly 360° around them.",
      "Goldfish can recognize their owner's face among different people.",
      "Dogs sweat through their paw pads, not their tongue.",
      "Parrots can live for over 80 years in captivity.",
      "Some cats sleep up to 16 hours a day!",
      "Horses can sleep both lying down and standing up."
    ];

    function loadFacts() {
      const factCardsContainer = document.getElementById('fact-cards');
      factCardsContainer.innerHTML = "";
      petFacts.forEach(fact => {
        const card = document.createElement('div');
        card.classList.add('fact-card');
        card.innerHTML = `<p>${fact}</p>`;
        factCardsContainer.appendChild(card);
      });
    }

    document.getElementById('load-more-facts').addEventListener('click', loadFacts);

    // Weather API Integration using Open-Meteo (Dublin coords)
    const weatherUrl = "https://api.open-meteo.com/v1/forecast?latitude=53.3498&longitude=-6.2603&current_weather=true";
const weatherBtn = document.getElementById('weather-btn');
const weatherInfo = document.getElementById('weather-info');

let weatherVisible = false;  // Flag to toggle visibility

function getWeatherSuggestion(weathercode) {
  if (weathercode === 0) {
    return "Clear sky! Perfect day for a walk with your pet.";
  } else if (weathercode >= 1 && weathercode <= 3) {
    return "Mostly clear. A nice day to take your pet out, but maybe bring a light jacket.";
  } else if (weathercode >= 45 && weathercode <= 67) {
    return "It might be a bit damp or foggy. Consider keeping your pet indoors or be cautious.";
  } else if (weathercode >= 61 && weathercode <= 82) {
    return "Rain showers expected. Better to keep your pet indoors or plan for a short outing.";
  } else if (weathercode >= 95) {
    return "Severe weather alert! Best to keep your pet safe indoors until conditions improve.";
  } else {
    return "Weather seems moderate. Enjoy a calm walk with your pet!";
  }
}

async function checkWeather() {
  // If already visible, hide it
  if (weatherVisible) {
    weatherInfo.innerHTML = "";
    weatherBtn.textContent = "Check Weather";
    weatherVisible = false;
    return;
  }

  try {
    weatherInfo.innerHTML = "Loading weather data...";
    const response = await fetch(weatherUrl);
    if (!response.ok) {
      throw new Error(`Error: ${response.status}`);
    }

    const data = await response.json();
    const currentWeather = data.current_weather;
    const temperature = currentWeather.temperature;
    const weathercode = currentWeather.weathercode;
    const suggestion = getWeatherSuggestion(weathercode);

    weatherInfo.innerHTML = `
      <h3>Current Weather in Dublin</h3>
      <p>Temperature: ${temperature}°C</p>
      <p>${suggestion}</p>
    `;

    weatherBtn.textContent = "Hide Weather";
    weatherVisible = true;

  } catch (error) {
    console.error("Error fetching weather data:", error);
    weatherInfo.innerHTML = "<p style='color:red;'>Unable to retrieve weather data.</p>";
  }
}

weatherBtn.addEventListener('click', checkWeather);


  // Sandra's Fetch Pet Fashion (Real API)
  document.getElementById('fetchDataButton').addEventListener('click', function() {
            fetchProducts();
        });
		// Fetch products from the real API
        function fetchProducts() {
            productsContainer.innerHTML = '<p>Loading...</p>'; // Show loading message
            fetch('http://54.88.94.5:8000/api/fashions/')
                .then(response => response.json())
                .then(data => {
                    if (data.length === 0) {
                        productsContainer.innerHTML = '<p>No products available.</p>';
                        return;
                    }
 
                    productsContainer.innerHTML = ''; // Clear previous content
                    data.forEach(item => {
                        const productDiv = document.createElement('div');
                        productDiv.classList.add('product');
                        productDiv.innerHTML = `
<img src="${item.image_url}" alt="${item.name}">
<p>${item.name}</p>
<p>${item.description}</p>
<p>Category: ${item.pet_category}</p>
<p><strong>Price:</strong> $${item.price}</p>
<button class="editButton" data-id="${item.id}">Edit</button>
<button class="deleteButton" data-id="${item.id}">Delete</button>
                        `;
                        productsContainer.appendChild(productDiv);
                    });
 
                    // Add event listeners for Edit and Delete buttons
                    document.querySelectorAll('.editButton').forEach(button => {
                        button.addEventListener('click', function(event) {
                            const productId = event.target.getAttribute('data-id');
                            editProduct(productId);
                        });
                    });
 
                    document.querySelectorAll('.deleteButton').forEach(button => {
                        button.addEventListener('click', function(event) {
                            const productId = event.target.getAttribute('data-id');
                            deleteProduct(productId);
                        });
                    });
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                    productsContainer.innerHTML = '<p>There was an error loading the products. Please try again later.</p>';
                });
        }
  </script>
</body>
</html>
